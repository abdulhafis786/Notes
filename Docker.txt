sudo -i
usermod -aG docker ubuntu
exit


FROM alpine:latest
RUN apk update
RUN apk add openssh
RUN adduser -g "Student user" -D student && mkdir /home/student/.ssh
RUN echo "student:student" | chpasswd
ADD authorized_keys /home/student/.ssh/
RUN chown -R student.student /home/student
RUN chmod 700 /home/student/.ssh && chmod 600 /home/student/.ssh/authorized_keys
RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -q -N ""
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]



FROM centos:latest
RUN yum install -y wget
RUN yum install -y zip
RUN cd /tmp && wget -q --no-check-certificate --no-cookies \
--header "Cookie: oraclelicense=accept-securebackup-cookie" \
http://download.oracle.com/otn-pub/java/jdk/8u191-b12/2787e4a523244c269598db4e85c51e0c/jdk-8u191-linux-x64.rpm
RUN rpm -i /tmp/jdk*linux-x64.rpm
ENV JAVA_HOME=/usr/java/latest
RUN cd /tmp && wget https://sourceforge.net/projects/j-trac/files/jtrac/2.1.0/jtrac-2.1.0.zip
RUN yum install -y unzip
RUN cd /opt && unzip /tmp/jtrac*.zip
RUN cd /opt/jtrac && mv start.bat start.sh && chmod +x start.sh
RUN rm /tmp/jdk*linux-x64.rpm /tmp/jtrac*.zip
WORKDIR /opt/jtrac
CMD ./start.sh




https://docs.docker.com/engine/reference/builder/#copy ---- Docker file reference

sudo curl -L "https://github.com/docker/compose/releases/download/1.23.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

FROM centos:latest
RUN yum install -y openssh-server
RUN mkdir /var/run/sshd
RUN useradd -c "Student User" -m student
RUN echo "student:student" | chpasswd
RUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -q -N ""
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]

Docker-compose.yaml

---
version: "2"
services:
  sshd:
    build: sshd
    image: centos-sshd:latest
    ports:
      - "2222:22"


Chef:
 knife bootstrap 35.154.202.96  --ssh-user ubuntu --sudo --identity-file devops.pem --node-name node1-ubuntu

name "apachewebserver"
description "Apache Web Server"
run_list "recipe[apache]"
default_attributes({
  "apache" => {
    "sites" => {
      "admin" => {
        "port" => 8080
      }
    }
  }
})


https://supermarket.chef.io/ ---- Chef repo

FROM python:3.4-alpine
ADD . /code
WORKDIR /code
RUN pip install -r requirements.txt
CMD ["python", "app.py"]


version: '3'
services:
  web:
    image: 127.0.0.1:5000/stackdemo
    build: .
    ports:
       - "8000:8000"
  redis:
   image: redis:alpine

docker swarm join --token SWMTKN-1-5f5negzpdjet8lks3ksrpb6amty7makmb8260g0bzrynvo1ygi-dhyws4m56e45wng0kp1pa05o7 172.31.2.162:2377


sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
   stable"


sudo apt-get install docker-ce

sudo docker --version

docker swarm join --token SWMTKN-1-5f5negzpdjet8lks3ksrpb6amty7makmb8260g0bzrynvo1ygi-dhyws4m56e45wng0kp1pa05o7 172.31.2.162:2377

Docker node ls ---- to list the nods connected to the swarm manager

docker service create --replicas 1 --name helloworld alpine ping docker.com -- to create an image and replicate as needed. Here 1 is given so only one image is created

docker service inspect --pretty helloworld --- to inspect the image created

docker service scale helloworld=2 --- to increase the replica of the containers. IF you give this, the container will replicate with how many numbers you give

docker service ps redis -- to find out where the replicas are running

docker service ls -- to list the containers running in Swarm and the no of replicas

docker service create --name reg --publish 5000:5000 registry:2 --- to create a registry

docker service create --replicas 3 --name redis --update-delay 10s redis:3.0.6 --- to start a container with a delay time

docker service update --image redis:3.0.7 redis --- to update an existing container with a new image

docker stack services stackdemo ---- to start the service stackdemo( i hope lets check it tomorrow)

docker stack rm stackdemo/ docker service rm reg(this is the one to remove) --- to remove the service( i dont think)

docker swarm leave --force --- to make the manager leave the swarm



